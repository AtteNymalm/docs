---
title: Overview
order: 1
layout: page
---

[[fusion.application.overview]]
= Overview

See the <<../../flow/application/application-overview#, corresponding article for the Java API>>.

Continuing from the introduction given in <<../../guide/introduction/introduction-overview#, Introduction>>, this chapter gives a more thorough and a more practical overview of Vaadin application basics.
The various topics in this chapter are described in more detail throughout the further documentation.

.Fusion Application Architecture
image::images/fusion-architecture.png[]

The basic elements of an application built with Vaadin Fusion are:

Application Shell::
Fusion applications are single-page web applications.
An `index.html` file that is loaded first sets up application styles and loads the application scripts.
The main entry point is an `index.ts` script, where you set up routes to display the various views of the application.

Views::
The user interface of an application consists of one or more views.
Views are built from various web components.
Each view can display different data or other functionalities.
Typically, you have at least a main view, and possibly a login view to enter that.
A view such as the main view can contain child views that fit inside the layout of the parent view, such as "Products", "Personnel", or "Tasks".
+
A view in Fusion is a web component that extends LitElement.
+
A Vaadin application can have both Fusion and Flow views, but only Fusion views can work completely offline.

Routing::
Routing maps addresses to application content, such as views to display and manage application data.
+
See <<../routing/routing-defining#, Defining Routes>> for how to define routes in TypeScript.

Navigation::
Using an application involves navigation between the various views of the application.
In Fusion applications, you need to handle navigation in a way that works together with routing.

* Binding views to data
* Service layer
* Backend connectivity
* Authentication and authorization
* Progressive web application (PWA) features
